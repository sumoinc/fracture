// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`success conditions Smoke test 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: my-workflow
on:
  push:
    branches: []
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency: build
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: {}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: yarn
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: build
        run: npx projen build
"
`;

exports[`success conditions With deploy job 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: deploy
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency: build
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: {}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: yarn
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: build
        run: npx projen build
      - name: Backup artifact permissions for \\"foo\\"
        run: getfacl -R . > permissions-backup.acl
        continue-on-error: true
        working-directory: foo
      - name: Upload artifacts for \\"foo\\"
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact-acbd18db
          path: foo
  deploy-my-app-main-my-environment:
    name: Deploy my-app main my-environment
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    concurrency: deploy-my-app-main-my-environment
    env:
      CI: \\"true\\"
    if: startsWith( github.ref, 'refs/heads/main' )
    steps:
      - name: Download build artifacts for \\"foo\\"
        uses: actions/download-artifact@v3
        with:
          name: build-artifact-acbd18db
          path: foo
      - name: Restore build artifact permissions for \\"foo\\"
        run: setfacl --restore=permissions-backup.acl
        continue-on-error: true
        working-directory: foo
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::0000000000:role/GitHubDeploymentOIDCRole
          aws-region: us-east-1
          role-duration-seconds: 900
      - name: Say foo
        run: echo 'foo'
"
`;
