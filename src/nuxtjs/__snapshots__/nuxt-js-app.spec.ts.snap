// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`validate generated project files Detect new files 1`] = `
Array [
  "apps/test/.gitattributes",
  "apps/test/.gitignore",
  "apps/test/.npmignore",
  "apps/test/.npmrc",
  "apps/test/.projen/deps.json",
  "apps/test/.projen/files.json",
  "apps/test/.projen/tasks.json",
  "apps/test/conponents/README.md",
  "apps/test/layouts/default.vue",
  "apps/test/nuxt.config.ts",
  "apps/test/package.json",
  "apps/test/pages/index.vue",
  "apps/test/plugins/README.md",
  "apps/test/public/README.md",
  "apps/test/README.md",
  "apps/test/server/tsconfig.json",
  "apps/test/tsconfig.json",
]
`;

exports[`validate generated project files apps/test/.gitignore 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".
!/.gitattributes
!/.projen/tasks.json
!/.projen/deps.json
!/.projen/files.json
!/package.json
!/.npmignore
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json
pids
*.pid
*.seed
*.pid.lock
lib-cov
coverage
*.lcov
.nyc_output
build/Release
node_modules/
jspm_packages/
*.tsbuildinfo
.eslintcache
*.tgz
.yarn-integrity
!/.projenrc.js
/test-reports/
junit.xml
/coverage/
!/.npmrc
.output
.data
.nuxt
.nitro
.cache
dist
logs
*.log
.DS_Store
.fleet
.idea
.env
.env.*
!.env.example
!/nuxt.config.ts
!/tsconfig.json
!/server/tsconfig.json
"
`;

exports[`validate generated project files apps/test/.npmrc 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

resolution-mode=highest
shamefully-hoist=true
"
`;

exports[`validate generated project files apps/test/.projen/deps.json 1`] = `
Object {
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
  "dependencies": Array [
    Object {
      "name": "@nuxt/devtools",
      "type": "build",
      "version": "latest",
    },
    Object {
      "name": "@types/node",
      "type": "build",
      "version": "^18.17.3",
    },
    Object {
      "name": "jest",
      "type": "build",
    },
    Object {
      "name": "jest-junit",
      "type": "build",
      "version": "^15",
    },
    Object {
      "name": "npm-check-updates",
      "type": "build",
      "version": "^16",
    },
    Object {
      "name": "nuxt",
      "type": "build",
      "version": "^3.6.5",
    },
    Object {
      "name": "projen",
      "type": "build",
    },
  ],
}
`;

exports[`validate generated project files apps/test/.projen/files.json 1`] = `
Object {
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
  "files": Array [
    ".gitattributes",
    ".gitignore",
    ".npmignore",
    ".npmrc",
    ".projen/deps.json",
    ".projen/files.json",
    ".projen/tasks.json",
    "nuxt.config.ts",
    "server/tsconfig.json",
    "tsconfig.json",
  ],
}
`;

exports[`validate generated project files apps/test/.projen/tasks.json 1`] = `
Object {
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
  "env": Object {
    "PATH": "$(pnpm -c exec \\"node --print process.env.PATH\\")",
  },
  "tasks": Object {
    "build": Object {
      "description": "Full release build",
      "name": "build",
      "steps": Array [
        Object {
          "spawn": "pre-compile",
        },
        Object {
          "spawn": "compile",
        },
        Object {
          "spawn": "post-compile",
        },
        Object {
          "spawn": "test",
        },
        Object {
          "spawn": "package",
        },
      ],
    },
    "compile": Object {
      "description": "Only compile",
      "name": "compile",
    },
    "default": Object {
      "description": "Synthesize project files",
      "name": "default",
      "steps": Array [
        Object {
          "cwd": "../..",
          "exec": "npx projen default",
        },
      ],
    },
    "install": Object {
      "description": "Install project dependencies and update lockfile (non-frozen)",
      "name": "install",
      "steps": Array [
        Object {
          "exec": "pnpm i --no-frozen-lockfile",
        },
      ],
    },
    "install:ci": Object {
      "description": "Install project dependencies using frozen lockfile",
      "name": "install:ci",
      "steps": Array [
        Object {
          "exec": "pnpm i --frozen-lockfile",
        },
      ],
    },
    "nuxt:build": Object {
      "name": "nuxt:build",
      "steps": Array [
        Object {
          "exec": "nuxt build",
        },
      ],
    },
    "nuxt:dev": Object {
      "name": "nuxt:dev",
      "steps": Array [
        Object {
          "exec": "nuxt dev",
        },
      ],
    },
    "nuxt:generate": Object {
      "name": "nuxt:generate",
      "steps": Array [
        Object {
          "exec": "nuxt generate",
        },
      ],
    },
    "nuxt:postinstall": Object {
      "name": "nuxt:postinstall",
      "steps": Array [
        Object {
          "exec": "nuxt prepare",
        },
      ],
    },
    "nuxt:preview": Object {
      "name": "nuxt:preview",
      "steps": Array [
        Object {
          "exec": "nuxt preview",
        },
      ],
    },
    "package": Object {
      "description": "Creates the distribution package",
      "name": "package",
      "steps": Array [
        Object {
          "exec": "mkdir -p dist/js",
        },
        Object {
          "exec": "mv $(npm pack) dist/js/",
        },
      ],
    },
    "post-compile": Object {
      "description": "Runs after successful compilation",
      "name": "post-compile",
    },
    "post-upgrade": Object {
      "description": "Runs after upgrading dependencies",
      "name": "post-upgrade",
    },
    "pre-compile": Object {
      "description": "Prepare the project for compilation",
      "name": "pre-compile",
    },
    "test": Object {
      "description": "Run tests",
      "name": "test",
      "steps": Array [
        Object {
          "exec": "jest --passWithNoTests --updateSnapshot",
          "receiveArgs": true,
        },
      ],
    },
    "test:watch": Object {
      "description": "Run jest in watch mode",
      "name": "test:watch",
      "steps": Array [
        Object {
          "exec": "jest --watch",
        },
      ],
    },
    "upgrade": Object {
      "description": "upgrade dependencies",
      "env": Object {
        "CI": "0",
      },
      "name": "upgrade",
      "steps": Array [
        Object {
          "exec": "pnpm update npm-check-updates",
        },
        Object {
          "exec": "npm-check-updates --upgrade --target=minor --peer --dep=dev,peer,prod,optional --filter=@types/node,jest,jest-junit,npm-check-updates,nuxt,projen",
        },
        Object {
          "exec": "pnpm i --no-frozen-lockfile",
        },
        Object {
          "exec": "pnpm update @types/node jest jest-junit npm-check-updates nuxt projen",
        },
        Object {
          "exec": "npx projen",
        },
        Object {
          "spawn": "post-upgrade",
        },
      ],
    },
  },
}
`;

exports[`validate generated project files apps/test/nuxt.config.ts 1`] = `
"export default defineNuxtConfig({
  devtools: { enabled: true },
});"
`;

exports[`validate generated project files apps/test/package.json 1`] = `
Object {
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
  "devDependencies": Object {
    "@nuxt/devtools": "latest",
    "@types/node": "^18.17.3",
    "jest": "*",
    "jest-junit": "^15",
    "npm-check-updates": "^16",
    "nuxt": "^3.6.5",
    "projen": "*",
  },
  "jest": Object {
    "clearMocks": true,
    "collectCoverage": true,
    "coverageDirectory": "coverage",
    "coveragePathIgnorePatterns": Array [
      "/node_modules/",
    ],
    "coverageReporters": Array [
      "json",
      "lcov",
      "clover",
      "cobertura",
      "text",
    ],
    "reporters": Array [
      "default",
      Array [
        "jest-junit",
        Object {
          "outputDirectory": "test-reports",
        },
      ],
    ],
    "testMatch": Array [
      "**/__tests__/**/*.[jt]s?(x)",
      "**/?(*.)+(spec|test).[tj]s?(x)",
    ],
    "testPathIgnorePatterns": Array [
      "/node_modules/",
    ],
    "watchPathIgnorePatterns": Array [
      "/node_modules/",
    ],
  },
  "license": "UNLICENSED",
  "main": "lib/index.js",
  "name": "test",
  "pnpm": Object {},
  "scripts": Object {
    "build": "npx projen build",
    "compile": "npx projen compile",
    "default": "npx projen default",
    "nuxt:build": "npx projen nuxt:build",
    "nuxt:dev": "npx projen nuxt:dev",
    "nuxt:generate": "npx projen nuxt:generate",
    "nuxt:postinstall": "npx projen nuxt:postinstall",
    "nuxt:preview": "npx projen nuxt:preview",
    "package": "npx projen package",
    "post-compile": "npx projen post-compile",
    "post-upgrade": "npx projen post-upgrade",
    "pre-compile": "npx projen pre-compile",
    "projen": "npx projen",
    "test": "npx projen test",
    "test:watch": "npx projen test:watch",
    "upgrade": "npx projen upgrade",
  },
  "version": "0.0.0",
}
`;

exports[`validate generated project files apps/test/server/tsconfig.json 1`] = `
Object {
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
  "extends": "../.nuxt/tsconfig.server.json",
}
`;

exports[`validate generated project files apps/test/tsconfig.json 1`] = `
Object {
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
  "extends": "./.nuxt/tsconfig.json",
}
`;
