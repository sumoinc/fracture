// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Operations Create 1`] = `
"// ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

export type Error = {
    code: number;
    source: string;
    message: string;
    detail: string;
};

export type Request<T> = {
    input?: T;
};

export type Response<T> = {
    data?: T;
    errors: Array<Error>;
    status: number;
};

export type ListRequest<T> = {
    /**
     * A search string to filter the list by.
     * Will match starting string in index text. Case insensitive.
    */
    indexTerm: string;
    nextToken: string;
};

export type ListResponse<T> = {
    data?: Array<T>;
    errors: Array<Error>;
    status: number;
};

/**
 * Public facing data structure for this record.
*/
export type MyResource = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    firstName: string;
    lastName: string;
    height: number;
    isFrog: boolean;
    oneDoug: Doug;
    arrayOfDoug: Array<Doug>;
    mapOfDoug: Record<string, Doug>;
};

/**
 * Public facing data structure for this record.
*/
export type Doug = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    name: string;
};

export type CreateMyResourceInput = {
    firstName: string;
    lastName: string;
    height: number;
    isFrog: boolean;
    oneDoug: Doug;
};
"
`;

exports[`Operations Create 2`] = `
"// ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

/**
 * Public facing data structure for this record.
*/
export type MyResourceMarshalled = {
    /**
     * Partition Key for this record.
    */
    pk: {
        S: string;
    };
    /**
     * Sort Key for this record.
    */
    sk: {
        S: string;
    };
    /**
     * Lookup value for this record.
    */
    idx: {
        S: string;
    };
    /**
     * Identifier for this record.
    */
    id: {
        S: string;
    };
    /**
     * Type of record.
    */
    t: {
        S: string;
    };
    /**
     * Version for record.
    */
    v: {
        S: string;
    };
    /**
     * The timestamp representing when this record was created.
    */
    ct: {
        S: string;
    };
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: {
        S: string;
    };
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: {
        S: string;
    };
    fn: {
        S: string;
    };
    ln: {
        S: string;
    };
    ht: {
        N: number;
    };
    if: {
        BOOL: boolean;
    };
    od: {
        \\"M\\": DougMarshalled;
    };
    ad: {
        L: Array<Partial<DougMarshalled>>;
    };
    md: {
        M: Record<string, Partial<DougMarshalled>>;
    };
};

/**
 * Public facing data structure for this record.
*/
export type DougMarshalled = {
    /**
     * Partition Key for this record.
    */
    pk: {
        S: string;
    };
    /**
     * Sort Key for this record.
    */
    sk: {
        S: string;
    };
    /**
     * Lookup value for this record.
    */
    idx: {
        S: string;
    };
    /**
     * Identifier for this record.
    */
    id: {
        S: string;
    };
    /**
     * Type of record.
    */
    t: {
        S: string;
    };
    /**
     * Version for record.
    */
    v: {
        S: string;
    };
    /**
     * The timestamp representing when this record was created.
    */
    ct: {
        S: string;
    };
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: {
        S: string;
    };
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: {
        S: string;
    };
    name: {
        S: string;
    };
};

export type CreateMyResourceInputMarshalled = {
    /**
     * Partition Key for this record.
    */
    pk: {
        S: string;
    };
    /**
     * Sort Key for this record.
    */
    sk: {
        S: string;
    };
    /**
     * Lookup value for this record.
    */
    idx: {
        S: string;
    };
    /**
     * Identifier for this record.
    */
    id: {
        S: string;
    };
    /**
     * Type of record.
    */
    t: {
        S: string;
    };
    /**
     * Version for record.
    */
    v: {
        S: string;
    };
    /**
     * The timestamp representing when this record was created.
    */
    ct: {
        S: string;
    };
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: {
        S: string;
    };
    fn: {
        S: string;
    };
    ln: {
        S: string;
    };
    ht: {
        N: number;
    };
    if: {
        BOOL: boolean;
    };
    od: {
        \\"M\\": DougMarshalled;
    };
};

/**
 * Public facing data structure for this record.
*/
export type MyResourceUnmarshalled = {
    /**
     * Partition Key for this record.
    */
    pk: string;
    /**
     * Sort Key for this record.
    */
    sk: string;
    /**
     * Lookup value for this record.
    */
    idx: string;
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    t: string;
    /**
     * Version for record.
    */
    v: string;
    /**
     * The timestamp representing when this record was created.
    */
    ct: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: string;
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: string;
    fn: string;
    ln: string;
    ht: number;
    if: boolean;
    od: Doug;
    ad: Array<Partial<DougUnmarshalled>>;
    md: Record<Partial<DougUnmarshalled>>;
};

/**
 * Public facing data structure for this record.
*/
export type DougUnmarshalled = {
    /**
     * Partition Key for this record.
    */
    pk: string;
    /**
     * Sort Key for this record.
    */
    sk: string;
    /**
     * Lookup value for this record.
    */
    idx: string;
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    t: string;
    /**
     * Version for record.
    */
    v: string;
    /**
     * The timestamp representing when this record was created.
    */
    ct: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: string;
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: string;
    name: string;
};

export type CreateMyResourceInputUnmarshalled = {
    /**
     * Partition Key for this record.
    */
    pk: string;
    /**
     * Sort Key for this record.
    */
    sk: string;
    /**
     * Lookup value for this record.
    */
    idx: string;
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    t: string;
    /**
     * Version for record.
    */
    v: string;
    /**
     * The timestamp representing when this record was created.
    */
    ct: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: string;
    fn: string;
    ln: string;
    ht: number;
    if: boolean;
    od: Doug;
};
"
`;

exports[`Resource formatting test 1`] = `
"// ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

export type Error = {
    code: number;
    source: string;
    message: string;
    detail: string;
};

export type Request<T> = {
    input?: T;
};

export type Response<T> = {
    data?: T;
    errors: Array<Error>;
    status: number;
};

export type ListRequest<T> = {
    /**
     * A search string to filter the list by.
     * Will match starting string in index text. Case insensitive.
    */
    indexTerm: string;
    nextToken: string;
};

export type ListResponse<T> = {
    data?: Array<T>;
    errors: Array<Error>;
    status: number;
};

/**
 * Public facing data structure for this record.
*/
export type MyResource = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    firstName: string;
    lastName: string;
    height: number;
    isFrog: boolean;
    oneDoug: Doug;
    arrayOfDoug: Array<Doug>;
    mapOfDoug: Record<string, Doug>;
};

/**
 * Public facing data structure for this record.
*/
export type Doug = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    name: string;
};
"
`;

exports[`Resource formatting test 2`] = `
"// ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

/**
 * Public facing data structure for this record.
*/
export type MyResourceMarshalled = {
    /**
     * Partition Key for this record.
    */
    pk: {
        S: string;
    };
    /**
     * Sort Key for this record.
    */
    sk: {
        S: string;
    };
    /**
     * Lookup value for this record.
    */
    idx: {
        S: string;
    };
    /**
     * Identifier for this record.
    */
    id: {
        S: string;
    };
    /**
     * Type of record.
    */
    t: {
        S: string;
    };
    /**
     * Version for record.
    */
    v: {
        S: string;
    };
    /**
     * The timestamp representing when this record was created.
    */
    ct: {
        S: string;
    };
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: {
        S: string;
    };
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: {
        S: string;
    };
    fn: {
        S: string;
    };
    ln: {
        S: string;
    };
    ht: {
        N: number;
    };
    if: {
        BOOL: boolean;
    };
    od: {
        \\"M\\": DougMarshalled;
    };
    ad: {
        L: Array<Partial<DougMarshalled>>;
    };
    md: {
        M: Record<string, Partial<DougMarshalled>>;
    };
};

/**
 * Public facing data structure for this record.
*/
export type DougMarshalled = {
    /**
     * Partition Key for this record.
    */
    pk: {
        S: string;
    };
    /**
     * Sort Key for this record.
    */
    sk: {
        S: string;
    };
    /**
     * Lookup value for this record.
    */
    idx: {
        S: string;
    };
    /**
     * Identifier for this record.
    */
    id: {
        S: string;
    };
    /**
     * Type of record.
    */
    t: {
        S: string;
    };
    /**
     * Version for record.
    */
    v: {
        S: string;
    };
    /**
     * The timestamp representing when this record was created.
    */
    ct: {
        S: string;
    };
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: {
        S: string;
    };
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: {
        S: string;
    };
    name: {
        S: string;
    };
};

/**
 * Public facing data structure for this record.
*/
export type MyResourceUnmarshalled = {
    /**
     * Partition Key for this record.
    */
    pk: string;
    /**
     * Sort Key for this record.
    */
    sk: string;
    /**
     * Lookup value for this record.
    */
    idx: string;
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    t: string;
    /**
     * Version for record.
    */
    v: string;
    /**
     * The timestamp representing when this record was created.
    */
    ct: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: string;
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: string;
    fn: string;
    ln: string;
    ht: number;
    if: boolean;
    od: Doug;
    ad: Array<Partial<DougUnmarshalled>>;
    md: Record<Partial<DougUnmarshalled>>;
};

/**
 * Public facing data structure for this record.
*/
export type DougUnmarshalled = {
    /**
     * Partition Key for this record.
    */
    pk: string;
    /**
     * Sort Key for this record.
    */
    sk: string;
    /**
     * Lookup value for this record.
    */
    idx: string;
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    t: string;
    /**
     * Version for record.
    */
    v: string;
    /**
     * The timestamp representing when this record was created.
    */
    ct: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: string;
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: string;
    name: string;
};
"
`;
