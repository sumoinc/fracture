// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Resource formatting test 1`] = `
"// ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

/**
 * Public facing data structure for this record.
*/
export type PersonMarshalled = {
    /**
     * Partition Key for this record.
    */
    pk: {
        S: string;
    };
    /**
     * Sort Key for this record.
    */
    sk: {
        S: string;
    };
    /**
     * Lookup value for this record.
    */
    idx: {
        S: string;
    };
    /**
     * Identifier for this record.
    */
    id: {
        S: string;
    };
    /**
     * Type of record.
    */
    t: {
        S: string;
    };
    /**
     * Version for record.
    */
    v: {
        S: string;
    };
    /**
     * The timestamp representing when this record was created.
    */
    ct: {
        S: string;
    };
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: {
        S: string;
    };
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: {
        S: string;
    };
    fn: {
        S: string;
    };
    ln: {
        S: string;
    };
    ht: {
        N: number;
    };
    /**
     * Is this person a frog?
    */
    if: {
        BOOL: boolean;
    };
    /**
     * List opf favorite colors
    */
    favColors: {
        L: Array<Partial<StringMarshalled>>;
    };
    oneClub: {
        \\"M\\": ClubMarshalled;
    };
    ad: {
        L: Array<Partial<ClubMarshalled>>;
    };
};

/**
 * Public facing data structure for this record.
*/
export type ClubMarshalled = {
    /**
     * Partition Key for this record.
    */
    pk: {
        S: string;
    };
    /**
     * Sort Key for this record.
    */
    sk: {
        S: string;
    };
    /**
     * Lookup value for this record.
    */
    idx: {
        S: string;
    };
    /**
     * Identifier for this record.
    */
    id: {
        S: string;
    };
    /**
     * Type of record.
    */
    t: {
        S: string;
    };
    /**
     * Version for record.
    */
    v: {
        S: string;
    };
    /**
     * The timestamp representing when this record was created.
    */
    ct: {
        S: string;
    };
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: {
        S: string;
    };
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: {
        S: string;
    };
    name: {
        S: string;
    };
};

export type CreatePersonInputMarshalled = {
    fn: {
        S: string;
    };
    ln: {
        S: string;
    };
    ht: {
        N: number;
    };
    /**
     * Is this person a frog?
    */
    if: {
        BOOL: boolean;
    };
    /**
     * List opf favorite colors
    */
    favColors: {
        L: Array<Partial<StringMarshalled>>;
    };
    oneClub: {
        \\"M\\": ClubMarshalled;
    };
    ad: {
        L: Array<Partial<ClubMarshalled>>;
    };
};

/**
 * Public facing data structure for this record.
*/
export type PersonUnmarshalled = {
    /**
     * Partition Key for this record.
    */
    pk: string;
    /**
     * Sort Key for this record.
    */
    sk: string;
    /**
     * Lookup value for this record.
    */
    idx: string;
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    t: string;
    /**
     * Version for record.
    */
    v: string;
    /**
     * The timestamp representing when this record was created.
    */
    ct: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: string;
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: string;
    fn: string;
    ln: string;
    ht: number;
    /**
     * Is this person a frog?
    */
    if: boolean;
    /**
     * List opf favorite colors
    */
    favColors: Array<Partial<StringUnmarshalled>>;
    oneClub: Club;
    ad: Array<Partial<ClubUnmarshalled>>;
};

/**
 * Public facing data structure for this record.
*/
export type ClubUnmarshalled = {
    /**
     * Partition Key for this record.
    */
    pk: string;
    /**
     * Sort Key for this record.
    */
    sk: string;
    /**
     * Lookup value for this record.
    */
    idx: string;
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    t: string;
    /**
     * Version for record.
    */
    v: string;
    /**
     * The timestamp representing when this record was created.
    */
    ct: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: string;
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: string;
    name: string;
};

export type CreatePersonInputUnmarshalled = {
    fn: string;
    ln: string;
    ht: number;
    /**
     * Is this person a frog?
    */
    if: boolean;
    /**
     * List opf favorite colors
    */
    favColors: Array<Partial<StringUnmarshalled>>;
    oneClub: Club;
    ad: Array<Partial<ClubUnmarshalled>>;
};
"
`;
