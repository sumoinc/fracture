// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Attribute Relationships 1`] = `
"// ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

export type Error = {
    code: number;
    source: string;
    message: string;
    detail: string;
};

export type Request<T> = {
    input?: T;
};

export type Response<T> = {
    data?: T;
    errors: Array<Error>;
    status: number;
};

export type ListRequest<T> = {
    /**
     * A search string to filter the list by.
     * Will match starting string in index text. Case insensitive.
    */
    indexTerm: string;
    nextToken: string;
};

export type ListResponse<T> = {
    data?: Array<T>;
    errors: Array<Error>;
    status: number;
};

/**
 * Public facing data structure for this record.
*/
export type Address = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    street: string;
    city: string;
};

/**
 * Private data structure for this record.
 * Used internally in Dynamo, SQS and other native services.
*/
export type AddressData = {
    /**
     * Partition Key for this record.
    */
    pk: string;
    /**
     * Sort Key for this record.
    */
    sk: string;
    /**
     * Lookup value for this record.
    */
    idx: string;
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    t: string;
    /**
     * Version for record.
    */
    v: string;
    /**
     * The timestamp representing when this record was created.
    */
    ct: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: string;
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: string;
    street: string;
    city: string;
};

export type CreateAddressInput = {
    street: string;
    city: string;
};

export type CreateAddressOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    street: string;
    city: string;
};

export type GetAddressInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type GetAddressOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    street: string;
    city: string;
};

export type UpdateAddressInput = {
    /**
     * Identifier for this record.
    */
    id: string;
    street: string;
    city: string;
};

export type UpdateAddressOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    street: string;
    city: string;
};

export type DeleteAddressInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type DeleteAddressOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    street: string;
    city: string;
};

/**
 * Public facing data structure for this record.
*/
export type User = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    firstName: string;
    lastName: string;
    primaryAddress: Address;
    addresses: Array<Address>;
    addressMap: Record<string, Address>;
};

/**
 * Private data structure for this record.
 * Used internally in Dynamo, SQS and other native services.
*/
export type UserData = {
    /**
     * Partition Key for this record.
    */
    pk: string;
    /**
     * Sort Key for this record.
    */
    sk: string;
    /**
     * Lookup value for this record.
    */
    idx: string;
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    t: string;
    /**
     * Version for record.
    */
    v: string;
    /**
     * The timestamp representing when this record was created.
    */
    ct: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: string;
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: string;
    firstName: string;
    lastName: string;
    primaryAddress: Address;
    addresses: Array<Address>;
    addressMap: Record<string, Address>;
};

export type CreateUserInput = {
    firstName: string;
    lastName: string;
    primaryAddress: Address;
    addresses: Array<Address>;
    addressMap: Record<string, Address>;
};

export type CreateUserOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    firstName: string;
    lastName: string;
    primaryAddress: Address;
    addresses: Array<Address>;
    addressMap: Record<string, Address>;
};

export type GetUserInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type GetUserOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    firstName: string;
    lastName: string;
    primaryAddress: Address;
    addresses: Array<Address>;
    addressMap: Record<string, Address>;
};

export type UpdateUserInput = {
    /**
     * Identifier for this record.
    */
    id: string;
    firstName: string;
    lastName: string;
    primaryAddress: Address;
    addresses: Array<Address>;
    addressMap: Record<string, Address>;
};

export type UpdateUserOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    firstName: string;
    lastName: string;
    primaryAddress: Address;
    addresses: Array<Address>;
    addressMap: Record<string, Address>;
};

export type DeleteUserInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type DeleteUserOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    firstName: string;
    lastName: string;
    primaryAddress: Address;
    addresses: Array<Address>;
    addressMap: Record<string, Address>;
};
"
`;

exports[`Attribute Relationships 2`] = `
"// ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

export type Error = {
    code: number;
    source: string;
    message: string;
    detail: string;
};

export type Request<T> = {
    input?: T;
};

export type Response<T> = {
    data?: T;
    errors: Array<Error>;
    status: number;
};

export type ListRequest<T> = {
    /**
     * A search string to filter the list by.
     * Will match starting string in index text. Case insensitive.
    */
    indexTerm: string;
    nextToken: string;
};

export type ListResponse<T> = {
    data?: Array<T>;
    errors: Array<Error>;
    status: number;
};

/**
 * Public facing data structure for this record.
*/
export type Calendar = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    name: string;
    description: string;
    events: Array<CalendarEvent>;
};

/**
 * Private data structure for this record.
 * Used internally in Dynamo, SQS and other native services.
*/
export type CalendarData = {
    /**
     * Partition Key for this record.
    */
    pk: string;
    /**
     * Sort Key for this record.
    */
    sk: string;
    /**
     * Lookup value for this record.
    */
    idx: string;
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    t: string;
    /**
     * Version for record.
    */
    v: string;
    /**
     * The timestamp representing when this record was created.
    */
    ct: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: string;
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: string;
    nn: string;
    ds: string;
    ev: Array<CalendarEvent>;
};

export type CreateCalendarInput = {
    name: string;
    description: string;
    events: Array<CalendarEvent>;
};

export type CreateCalendarOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    name: string;
    description: string;
    events: Array<CalendarEvent>;
};

export type GetCalendarInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type GetCalendarOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    name: string;
    description: string;
    events: Array<CalendarEvent>;
};

export type UpdateCalendarInput = {
    /**
     * Identifier for this record.
    */
    id: string;
    name: string;
    description: string;
    events: Array<CalendarEvent>;
};

export type UpdateCalendarOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    name: string;
    description: string;
    events: Array<CalendarEvent>;
};

export type DeleteCalendarInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type DeleteCalendarOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    name: string;
    description: string;
    events: Array<CalendarEvent>;
};

/**
 * Public facing data structure for this record.
*/
export type CalendarEvent = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    name: string;
};

/**
 * Private data structure for this record.
 * Used internally in Dynamo, SQS and other native services.
*/
export type CalendarEventData = {
    /**
     * Partition Key for this record.
    */
    pk: string;
    /**
     * Sort Key for this record.
    */
    sk: string;
    /**
     * Lookup value for this record.
    */
    idx: string;
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    t: string;
    /**
     * Version for record.
    */
    v: string;
    /**
     * The timestamp representing when this record was created.
    */
    ct: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: string;
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: string;
    nn: string;
};

export type CreateCalendarEventInput = {
    name: string;
};

export type CreateCalendarEventOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    name: string;
};

export type GetCalendarEventInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type GetCalendarEventOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    name: string;
};

export type UpdateCalendarEventInput = {
    /**
     * Identifier for this record.
    */
    id: string;
    name: string;
};

export type UpdateCalendarEventOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    name: string;
};

export type DeleteCalendarEventInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type DeleteCalendarEventOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    name: string;
};
"
`;
