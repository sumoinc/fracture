// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Able to override relationship names related array 1`] = `
"// ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

export type Error = {
    code: number;
    source: string;
    message: string;
    detail: string;
};

export type Request<T> = {
    input?: T;
};

export type Response<T> = {
    data?: T;
    errors: Array<Error>;
    status: number;
};

export type ListRequest<T> = {
    /**
     * A search string to filter the list by.
     * Will match starting string in index text. Case insensitive.
    */
    indexTerm: string;
    nextToken: string;
};

export type ListResponse<T> = {
    data?: Array<T>;
    errors: Array<Error>;
    status: number;
};

/**
 * Public facing data structure for this record.
*/
export type Foo = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    /**
     * Array of bar records.
    */
    bazzes: Array<Bar>;
};

/**
 * Private data structure for this record.
 * Used internally in Dynamo, SQS and other native services.
*/
export type FooData = {
    /**
     * Partition Key for this record.
    */
    pk: string;
    /**
     * Sort Key for this record.
    */
    sk: string;
    /**
     * Lookup value for this record.
    */
    idx: string;
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    t: string;
    /**
     * Version for record.
    */
    v: string;
    /**
     * The timestamp representing when this record was created.
    */
    ct: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: string;
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: string;
    /**
     * Array of bar records.
    */
    z: Array<Bar>;
};

export type CreateFooInput = {};

export type CreateFooOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    /**
     * Array of bar records.
    */
    bazzes: Array<Bar>;
};

export type GetFooInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type GetFooOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    /**
     * Array of bar records.
    */
    bazzes: Array<Bar>;
};

export type UpdateFooInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type UpdateFooOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    /**
     * Array of bar records.
    */
    bazzes: Array<Bar>;
};

export type DeleteFooInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type DeleteFooOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    /**
     * Array of bar records.
    */
    bazzes: Array<Bar>;
};

/**
 * Public facing data structure for this record.
*/
export type Bar = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};

/**
 * Private data structure for this record.
 * Used internally in Dynamo, SQS and other native services.
*/
export type BarData = {
    /**
     * Partition Key for this record.
    */
    pk: string;
    /**
     * Sort Key for this record.
    */
    sk: string;
    /**
     * Lookup value for this record.
    */
    idx: string;
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    t: string;
    /**
     * Version for record.
    */
    v: string;
    /**
     * The timestamp representing when this record was created.
    */
    ct: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: string;
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: string;
};

export type CreateBarInput = {};

export type CreateBarOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};

export type GetBarInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type GetBarOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};

export type UpdateBarInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type UpdateBarOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};

export type DeleteBarInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type DeleteBarOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};
"
`;

exports[`success conditions Able to add related array 1`] = `
"// ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

export type Error = {
    code: number;
    source: string;
    message: string;
    detail: string;
};

export type Request<T> = {
    input?: T;
};

export type Response<T> = {
    data?: T;
    errors: Array<Error>;
    status: number;
};

export type ListRequest<T> = {
    /**
     * A search string to filter the list by.
     * Will match starting string in index text. Case insensitive.
    */
    indexTerm: string;
    nextToken: string;
};

export type ListResponse<T> = {
    data?: Array<T>;
    errors: Array<Error>;
    status: number;
};

/**
 * Public facing data structure for this record.
*/
export type Foo = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    /**
     * Array of bar records.
    */
    bars: Array<Bar>;
};

/**
 * Private data structure for this record.
 * Used internally in Dynamo, SQS and other native services.
*/
export type FooData = {
    /**
     * Partition Key for this record.
    */
    pk: string;
    /**
     * Sort Key for this record.
    */
    sk: string;
    /**
     * Lookup value for this record.
    */
    idx: string;
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    t: string;
    /**
     * Version for record.
    */
    v: string;
    /**
     * The timestamp representing when this record was created.
    */
    ct: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: string;
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: string;
    /**
     * Array of bar records.
    */
    bars: Array<Bar>;
};

export type CreateFooInput = {};

export type CreateFooOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    /**
     * Array of bar records.
    */
    bars: Array<Bar>;
};

export type GetFooInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type GetFooOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    /**
     * Array of bar records.
    */
    bars: Array<Bar>;
};

export type UpdateFooInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type UpdateFooOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    /**
     * Array of bar records.
    */
    bars: Array<Bar>;
};

export type DeleteFooInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type DeleteFooOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    /**
     * Array of bar records.
    */
    bars: Array<Bar>;
};

/**
 * Public facing data structure for this record.
*/
export type Bar = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};

/**
 * Private data structure for this record.
 * Used internally in Dynamo, SQS and other native services.
*/
export type BarData = {
    /**
     * Partition Key for this record.
    */
    pk: string;
    /**
     * Sort Key for this record.
    */
    sk: string;
    /**
     * Lookup value for this record.
    */
    idx: string;
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    t: string;
    /**
     * Version for record.
    */
    v: string;
    /**
     * The timestamp representing when this record was created.
    */
    ct: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: string;
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: string;
};

export type CreateBarInput = {};

export type CreateBarOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};

export type GetBarInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type GetBarOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};

export type UpdateBarInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type UpdateBarOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};

export type DeleteBarInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type DeleteBarOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};
"
`;

exports[`success conditions Able to add related map 1`] = `
"// ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

export type Error = {
    code: number;
    source: string;
    message: string;
    detail: string;
};

export type Request<T> = {
    input?: T;
};

export type Response<T> = {
    data?: T;
    errors: Array<Error>;
    status: number;
};

export type ListRequest<T> = {
    /**
     * A search string to filter the list by.
     * Will match starting string in index text. Case insensitive.
    */
    indexTerm: string;
    nextToken: string;
};

export type ListResponse<T> = {
    data?: Array<T>;
    errors: Array<Error>;
    status: number;
};

/**
 * Public facing data structure for this record.
*/
export type Foo = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    /**
     * Map of bar records.
    */
    bars: Record<string, Bar>;
};

/**
 * Private data structure for this record.
 * Used internally in Dynamo, SQS and other native services.
*/
export type FooData = {
    /**
     * Partition Key for this record.
    */
    pk: string;
    /**
     * Sort Key for this record.
    */
    sk: string;
    /**
     * Lookup value for this record.
    */
    idx: string;
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    t: string;
    /**
     * Version for record.
    */
    v: string;
    /**
     * The timestamp representing when this record was created.
    */
    ct: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: string;
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: string;
    /**
     * Map of bar records.
    */
    bars: Record<string, Bar>;
};

export type CreateFooInput = {};

export type CreateFooOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    /**
     * Map of bar records.
    */
    bars: Record<string, Bar>;
};

export type GetFooInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type GetFooOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    /**
     * Map of bar records.
    */
    bars: Record<string, Bar>;
};

export type UpdateFooInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type UpdateFooOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    /**
     * Map of bar records.
    */
    bars: Record<string, Bar>;
};

export type DeleteFooInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type DeleteFooOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    /**
     * Map of bar records.
    */
    bars: Record<string, Bar>;
};

/**
 * Public facing data structure for this record.
*/
export type Bar = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};

/**
 * Private data structure for this record.
 * Used internally in Dynamo, SQS and other native services.
*/
export type BarData = {
    /**
     * Partition Key for this record.
    */
    pk: string;
    /**
     * Sort Key for this record.
    */
    sk: string;
    /**
     * Lookup value for this record.
    */
    idx: string;
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    t: string;
    /**
     * Version for record.
    */
    v: string;
    /**
     * The timestamp representing when this record was created.
    */
    ct: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: string;
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: string;
};

export type CreateBarInput = {};

export type CreateBarOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};

export type GetBarInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type GetBarOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};

export type UpdateBarInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type UpdateBarOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};

export type DeleteBarInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type DeleteBarOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};
"
`;

exports[`success conditions Able to add related resource 1`] = `
"// ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

export type Error = {
    code: number;
    source: string;
    message: string;
    detail: string;
};

export type Request<T> = {
    input?: T;
};

export type Response<T> = {
    data?: T;
    errors: Array<Error>;
    status: number;
};

export type ListRequest<T> = {
    /**
     * A search string to filter the list by.
     * Will match starting string in index text. Case insensitive.
    */
    indexTerm: string;
    nextToken: string;
};

export type ListResponse<T> = {
    data?: Array<T>;
    errors: Array<Error>;
    status: number;
};

/**
 * Public facing data structure for this record.
*/
export type Foo = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    bar: Bar;
};

/**
 * Private data structure for this record.
 * Used internally in Dynamo, SQS and other native services.
*/
export type FooData = {
    /**
     * Partition Key for this record.
    */
    pk: string;
    /**
     * Sort Key for this record.
    */
    sk: string;
    /**
     * Lookup value for this record.
    */
    idx: string;
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    t: string;
    /**
     * Version for record.
    */
    v: string;
    /**
     * The timestamp representing when this record was created.
    */
    ct: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: string;
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: string;
    bar: Bar;
};

export type CreateFooInput = {};

export type CreateFooOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    bar: Bar;
};

export type GetFooInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type GetFooOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    bar: Bar;
};

export type UpdateFooInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type UpdateFooOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    bar: Bar;
};

export type DeleteFooInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type DeleteFooOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    bar: Bar;
};

/**
 * Public facing data structure for this record.
*/
export type Bar = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};

/**
 * Private data structure for this record.
 * Used internally in Dynamo, SQS and other native services.
*/
export type BarData = {
    /**
     * Partition Key for this record.
    */
    pk: string;
    /**
     * Sort Key for this record.
    */
    sk: string;
    /**
     * Lookup value for this record.
    */
    idx: string;
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    t: string;
    /**
     * Version for record.
    */
    v: string;
    /**
     * The timestamp representing when this record was created.
    */
    ct: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    mt: string;
    /**
     * The timestamp representing when this record was marked as deleted.
    */
    dt: string;
};

export type CreateBarInput = {};

export type CreateBarOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};

export type GetBarInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type GetBarOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};

export type UpdateBarInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type UpdateBarOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};

export type DeleteBarInput = {
    /**
     * Identifier for this record.
    */
    id: string;
};

export type DeleteBarOutput = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};
"
`;
