// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Able to override relationship names related array 1`] = `
"// ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

export type Error = {
    code: number;
    source: string;
    message: string;
    detail: string;
};

export type Request<T> = {
    input?: T;
};

export type Response<T> = {
    data?: T;
    errors: Array<Error>;
    status: number;
};

export type ListRequest<T> = {
    /**
     * A search string to filter the list by.
     * Will match starting string in index text. Case insensitive.
    */
    indexTerm: string;
    nextToken: string;
};

export type ListResponse<T> = {
    data?: Array<T>;
    errors: Array<Error>;
    status: number;
};

/**
 * Public facing data structure for this record.
*/
export type Foo = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    /**
     * Array of bar records.
    */
    bazzes: Array<Bar>;
};

/**
 * Public facing data structure for this record.
*/
export type Bar = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};
"
`;

exports[`success conditions Able to add related array 1`] = `
"// ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

export type Error = {
    code: number;
    source: string;
    message: string;
    detail: string;
};

export type Request<T> = {
    input?: T;
};

export type Response<T> = {
    data?: T;
    errors: Array<Error>;
    status: number;
};

export type ListRequest<T> = {
    /**
     * A search string to filter the list by.
     * Will match starting string in index text. Case insensitive.
    */
    indexTerm: string;
    nextToken: string;
};

export type ListResponse<T> = {
    data?: Array<T>;
    errors: Array<Error>;
    status: number;
};

/**
 * Public facing data structure for this record.
*/
export type Foo = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    /**
     * Array of bar records.
    */
    bars: Array<Bar>;
};

/**
 * Public facing data structure for this record.
*/
export type Bar = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};
"
`;

exports[`success conditions Able to add related resource 1`] = `
"// ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

export type Error = {
    code: number;
    source: string;
    message: string;
    detail: string;
};

export type Request<T> = {
    input?: T;
};

export type Response<T> = {
    data?: T;
    errors: Array<Error>;
    status: number;
};

export type ListRequest<T> = {
    /**
     * A search string to filter the list by.
     * Will match starting string in index text. Case insensitive.
    */
    indexTerm: string;
    nextToken: string;
};

export type ListResponse<T> = {
    data?: Array<T>;
    errors: Array<Error>;
    status: number;
};

/**
 * Public facing data structure for this record.
*/
export type Foo = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
    bar: Bar;
};

/**
 * Public facing data structure for this record.
*/
export type Bar = {
    /**
     * Identifier for this record.
    */
    id: string;
    /**
     * Type of record.
    */
    type: string;
    /**
     * Version for record.
    */
    version: string;
    /**
     * The timestamp representing when this record was created.
    */
    createdTimestamp: string;
    /**
     * The timestamp representing when this record was last modified.
    */
    modifiedTimestamp: string;
};
"
`;

exports[`success conditions Smoke test 1`] = `
Object {
  "attributes": Array [
    Object {
      "comments": Array [
        "Partition Key for this record.",
      ],
      "compositionSeperator": "#",
      "compositionSources": Array [
        "id",
      ],
      "createGenerator": "Composition",
      "deleteGenerator": "Composition",
      "identifier": "NONE",
      "management": "SYSTEM_MANAGED",
      "name": "pk",
      "readGenerator": "Composition",
      "required": true,
      "shortName": "pk",
      "type": "String",
      "typeParameter": undefined,
      "updateGenerator": "Composition",
      "visibility": "HIDDEN",
    },
    Object {
      "comments": Array [
        "Sort Key for this record.",
      ],
      "compositionSeperator": "#",
      "compositionSources": Array [
        "type",
        "version",
      ],
      "createGenerator": "Composition",
      "deleteGenerator": "Composition",
      "identifier": "NONE",
      "management": "SYSTEM_MANAGED",
      "name": "sk",
      "readGenerator": "Composition",
      "required": true,
      "shortName": "sk",
      "type": "String",
      "typeParameter": undefined,
      "updateGenerator": "Composition",
      "visibility": "HIDDEN",
    },
    Object {
      "comments": Array [
        "Lookup value for this record.",
      ],
      "compositionSeperator": " ",
      "compositionSources": Array [],
      "createGenerator": "Composition",
      "deleteGenerator": "Composition",
      "identifier": "NONE",
      "management": "SYSTEM_MANAGED",
      "name": "lookup",
      "readGenerator": "Composition",
      "required": true,
      "shortName": "idx",
      "type": "String",
      "typeParameter": undefined,
      "updateGenerator": "Composition",
      "visibility": "HIDDEN",
    },
    Object {
      "comments": Array [
        "Identifier for this record.",
      ],
      "compositionSeperator": "#",
      "compositionSources": Array [],
      "createGenerator": "Guid",
      "deleteGenerator": "None",
      "identifier": "PRIMARY",
      "management": "SYSTEM_MANAGED",
      "name": "id",
      "readGenerator": "None",
      "required": true,
      "shortName": "id",
      "type": "String",
      "typeParameter": undefined,
      "updateGenerator": "None",
      "visibility": "USER_VISIBLE",
    },
    Object {
      "comments": Array [
        "Type of record.",
      ],
      "compositionSeperator": "#",
      "compositionSources": Array [],
      "createGenerator": "Type",
      "deleteGenerator": "None",
      "identifier": "NONE",
      "management": "SYSTEM_MANAGED",
      "name": "type",
      "readGenerator": "None",
      "required": true,
      "shortName": "t",
      "type": "String",
      "typeParameter": undefined,
      "updateGenerator": "None",
      "visibility": "USER_VISIBLE",
    },
    Object {
      "comments": Array [
        "Version for record.",
      ],
      "compositionSeperator": "#",
      "compositionSources": Array [],
      "createGenerator": "VersionDateTimeStamp",
      "deleteGenerator": "None",
      "identifier": "NONE",
      "management": "SYSTEM_MANAGED",
      "name": "version",
      "readGenerator": "None",
      "required": true,
      "shortName": "v",
      "type": "String",
      "typeParameter": undefined,
      "updateGenerator": "None",
      "visibility": "USER_VISIBLE",
    },
    Object {
      "comments": Array [
        "The timestamp representing when this record was created.",
      ],
      "compositionSeperator": "#",
      "compositionSources": Array [],
      "createGenerator": "CurrentDateTimeStamp",
      "deleteGenerator": "None",
      "identifier": "NONE",
      "management": "SYSTEM_MANAGED",
      "name": "created-timestamp",
      "readGenerator": "None",
      "required": true,
      "shortName": "ct",
      "type": "String",
      "typeParameter": undefined,
      "updateGenerator": "None",
      "visibility": "USER_VISIBLE",
    },
    Object {
      "comments": Array [
        "The timestamp representing when this record was last modified.",
      ],
      "compositionSeperator": "#",
      "compositionSources": Array [],
      "createGenerator": "CurrentDateTimeStamp",
      "deleteGenerator": "None",
      "identifier": "NONE",
      "management": "SYSTEM_MANAGED",
      "name": "modified-timestamp",
      "readGenerator": "None",
      "required": true,
      "shortName": "mt",
      "type": "String",
      "typeParameter": undefined,
      "updateGenerator": "CurrentDateTimeStamp",
      "visibility": "USER_VISIBLE",
    },
    Object {
      "comments": Array [
        "The timestamp representing when this record was marked as deleted.",
      ],
      "compositionSeperator": "#",
      "compositionSources": Array [],
      "createGenerator": "None",
      "deleteGenerator": "CurrentDateTimeStamp",
      "identifier": "NONE",
      "management": "SYSTEM_MANAGED",
      "name": "deleted-timestamp",
      "readGenerator": "None",
      "required": true,
      "shortName": "dt",
      "type": "String",
      "typeParameter": undefined,
      "updateGenerator": "None",
      "visibility": "HIDDEN",
    },
  ],
  "comments": Array [],
  "dataStructure": Object {
    "attributes": Array [
      Object {
        "comments": Array [
          "Partition Key for this record.",
        ],
        "generator": "None",
        "management": "SYSTEM_MANAGED",
        "name": "pk",
        "required": true,
        "shortName": "pk",
        "type": "String",
        "typeParameter": undefined,
        "visibility": "HIDDEN",
      },
      Object {
        "comments": Array [
          "Sort Key for this record.",
        ],
        "generator": "None",
        "management": "SYSTEM_MANAGED",
        "name": "sk",
        "required": true,
        "shortName": "sk",
        "type": "String",
        "typeParameter": undefined,
        "visibility": "HIDDEN",
      },
      Object {
        "comments": Array [
          "Lookup value for this record.",
        ],
        "generator": "None",
        "management": "SYSTEM_MANAGED",
        "name": "lookup",
        "required": true,
        "shortName": "idx",
        "type": "String",
        "typeParameter": undefined,
        "visibility": "HIDDEN",
      },
      Object {
        "comments": Array [
          "Identifier for this record.",
        ],
        "generator": "None",
        "management": "SYSTEM_MANAGED",
        "name": "id",
        "required": true,
        "shortName": "id",
        "type": "String",
        "typeParameter": undefined,
        "visibility": "USER_VISIBLE",
      },
      Object {
        "comments": Array [
          "Type of record.",
        ],
        "generator": "None",
        "management": "SYSTEM_MANAGED",
        "name": "type",
        "required": true,
        "shortName": "t",
        "type": "String",
        "typeParameter": undefined,
        "visibility": "USER_VISIBLE",
      },
      Object {
        "comments": Array [
          "Version for record.",
        ],
        "generator": "None",
        "management": "SYSTEM_MANAGED",
        "name": "version",
        "required": true,
        "shortName": "v",
        "type": "String",
        "typeParameter": undefined,
        "visibility": "USER_VISIBLE",
      },
      Object {
        "comments": Array [
          "The timestamp representing when this record was created.",
        ],
        "generator": "None",
        "management": "SYSTEM_MANAGED",
        "name": "created-timestamp",
        "required": true,
        "shortName": "ct",
        "type": "String",
        "typeParameter": undefined,
        "visibility": "USER_VISIBLE",
      },
      Object {
        "comments": Array [
          "The timestamp representing when this record was last modified.",
        ],
        "generator": "None",
        "management": "SYSTEM_MANAGED",
        "name": "modified-timestamp",
        "required": true,
        "shortName": "mt",
        "type": "String",
        "typeParameter": undefined,
        "visibility": "USER_VISIBLE",
      },
      Object {
        "comments": Array [
          "The timestamp representing when this record was marked as deleted.",
        ],
        "generator": "None",
        "management": "SYSTEM_MANAGED",
        "name": "deleted-timestamp",
        "required": true,
        "shortName": "dt",
        "type": "String",
        "typeParameter": undefined,
        "visibility": "HIDDEN",
      },
    ],
    "comments": Array [
      "Public facing data structure for this record.",
    ],
    "name": "foo",
    "persistant": true,
    "typeParameter": undefined,
  },
  "name": "foo",
  "pluralName": "foos",
  "shortName": "foo",
  "tenantEnabled": false,
}
`;
