// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`validate generated project files .github/workflows/deploy.yml 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.ts and run \\"npx projen\\".

name: deploy
on:
  push:
    branches:
      - feature/*
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency: build
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: {}
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: \\"8\\"
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: pnpm
      - name: Install dependencies
        run: pnpm i --frozen-lockfile
      - name: build
        run: npx projen build
      - name: Backup artifact permissions for \\"apps/my-app/cdk.out\\"
        run: getfacl -R . > permissions-backup.acl
        continue-on-error: true
        working-directory: apps/my-app/cdk.out
      - name: Upload artifacts for \\"apps/my-app/cdk.out\\"
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact-f22ee051
          path: apps/my-app/cdk.out
      - name: Backup artifact permissions for \\"apps/my-other-app/cdk.out\\"
        run: getfacl -R . > permissions-backup.acl
        continue-on-error: true
        working-directory: apps/my-other-app/cdk.out
      - name: Upload artifacts for \\"apps/my-other-app/cdk.out\\"
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact-f0901018
          path: apps/my-other-app/cdk.out
  deploy-my-app-to-us-east:
    name: Deploy my-app to us-east
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    concurrency: deploy-my-app-to-us-east
    env:
      CI: \\"true\\"
    if: startsWith( github.ref, 'refs/heads/feature' )
    steps:
      - name: Download build artifacts for \\"apps/my-app/cdk.out\\"
        uses: actions/download-artifact@v3
        with:
          name: build-artifact-f22ee051
          path: apps/my-app/cdk.out
      - name: Restore build artifact permissions for \\"apps/my-app/cdk.out\\"
        run: setfacl --restore=permissions-backup.acl
        continue-on-error: true
        working-directory: apps/my-app/cdk.out
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::0000000000:role/GitHubDeploymentOIDCRole
          aws-region: us-east-1
          role-duration-seconds: 900
      - name: deploy
        run: npx aws-cdk deploy --require-approval never --app apps/my-app/cdk.out *-us-east
  deploy-my-other-app-to-us-east:
    name: Deploy my-other-app to us-east
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    concurrency: deploy-my-other-app-to-us-east
    env:
      CI: \\"true\\"
    if: startsWith( github.ref, 'refs/heads/feature' )
    steps:
      - name: Download build artifacts for \\"apps/my-other-app/cdk.out\\"
        uses: actions/download-artifact@v3
        with:
          name: build-artifact-f0901018
          path: apps/my-other-app/cdk.out
      - name: Restore build artifact permissions for \\"apps/my-other-app/cdk.out\\"
        run: setfacl --restore=permissions-backup.acl
        continue-on-error: true
        working-directory: apps/my-other-app/cdk.out
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::0000000000:role/GitHubDeploymentOIDCRole
          aws-region: us-east-1
          role-duration-seconds: 900
      - name: deploy
        run: npx aws-cdk deploy --require-approval never --app apps/my-other-app/cdk.out *-us-east
"
`;

exports[`validate generated project files .projen/tasks.json 1`] = `
Object {
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
  "env": Object {
    "PATH": "$(pnpm -c exec \\"node --print process.env.PATH\\")",
  },
  "tasks": Object {
    "build": Object {
      "description": "Full release build",
      "name": "build",
      "steps": Array [
        Object {
          "spawn": "pre-compile",
        },
        Object {
          "spawn": "compile",
        },
        Object {
          "spawn": "post-compile",
        },
        Object {
          "spawn": "test",
        },
        Object {
          "spawn": "package",
        },
      ],
    },
    "bundle": Object {
      "description": "Prepare assets",
      "name": "bundle",
    },
    "compile": Object {
      "description": "Only compile",
      "name": "compile",
    },
    "default": Object {
      "description": "Synthesize project files",
      "name": "default",
    },
    "deploy": Object {
      "description": "Deploys your CDK app to the AWS cloud",
      "name": "deploy",
      "steps": Array [
        Object {
          "exec": "cdk deploy",
          "receiveArgs": true,
        },
      ],
    },
    "deploy:local:us-east": Object {
      "description": "Deploy to us-east from local environment",
      "name": "deploy:local:us-east",
      "steps": Array [
        Object {
          "exec": "cdk deploy *-us-east --profile Integration-0000000000 --require-approval never",
        },
      ],
    },
    "destroy": Object {
      "description": "Destroys your cdk app in the AWS cloud",
      "name": "destroy",
      "steps": Array [
        Object {
          "exec": "cdk destroy",
          "receiveArgs": true,
        },
      ],
    },
    "diff": Object {
      "description": "Diffs the currently deployed app against your code",
      "name": "diff",
      "steps": Array [
        Object {
          "exec": "cdk diff",
        },
      ],
    },
    "eslint": Object {
      "description": "Runs eslint against the codebase",
      "name": "eslint",
      "steps": Array [
        Object {
          "exec": "eslint --ext .ts,.tsx --fix --no-error-on-unmatched-pattern src test build-tools",
        },
      ],
    },
    "install": Object {
      "description": "Install project dependencies and update lockfile (non-frozen)",
      "name": "install",
      "steps": Array [
        Object {
          "exec": "pnpm i --no-frozen-lockfile",
        },
      ],
    },
    "install:ci": Object {
      "description": "Install project dependencies using frozen lockfile",
      "name": "install:ci",
      "steps": Array [
        Object {
          "exec": "pnpm i --frozen-lockfile",
        },
      ],
    },
    "package": Object {
      "description": "Creates the distribution package",
      "name": "package",
    },
    "post-compile": Object {
      "description": "Runs after successful compilation",
      "name": "post-compile",
      "steps": Array [
        Object {
          "spawn": "synth:silent",
        },
      ],
    },
    "post-upgrade": Object {
      "description": "Runs after upgrading dependencies",
      "name": "post-upgrade",
    },
    "pre-compile": Object {
      "description": "Prepare the project for compilation",
      "name": "pre-compile",
    },
    "synth": Object {
      "description": "Synthesizes your cdk app into cdk.out",
      "name": "synth",
      "steps": Array [
        Object {
          "exec": "cdk synth",
        },
      ],
    },
    "synth:silent": Object {
      "description": "Synthesizes your cdk app into cdk.out and suppresses the template in stdout (part of \\"yarn build\\")",
      "name": "synth:silent",
      "steps": Array [
        Object {
          "exec": "cdk synth -q",
        },
      ],
    },
    "test": Object {
      "description": "Run tests",
      "name": "test",
      "steps": Array [
        Object {
          "exec": "jest --passWithNoTests --updateSnapshot",
          "receiveArgs": true,
        },
        Object {
          "spawn": "eslint",
        },
      ],
    },
    "test:watch": Object {
      "description": "Run jest in watch mode",
      "name": "test:watch",
      "steps": Array [
        Object {
          "exec": "jest --watch",
        },
      ],
    },
    "upgrade": Object {
      "description": "upgrade dependencies",
      "env": Object {
        "CI": "0",
      },
      "name": "upgrade",
      "steps": Array [
        Object {
          "exec": "pnpx npm-check-updates@16 --upgrade --target=minor --peer --dep=dev,peer,prod,optional --filter=@types/jest,@types/node,@typescript-eslint/eslint-plugin,@typescript-eslint/parser,aws-cdk,esbuild,eslint-config-prettier,eslint-import-resolver-typescript,eslint-plugin-import,eslint-plugin-prettier,eslint,jest,jest-junit,prettier,projen,ts-jest,ts-node,typescript,aws-cdk-lib,constructs",
        },
        Object {
          "exec": "pnpm i --no-frozen-lockfile",
        },
        Object {
          "exec": "pnpm update @types/jest @types/node @typescript-eslint/eslint-plugin @typescript-eslint/parser aws-cdk esbuild eslint-config-prettier eslint-import-resolver-typescript eslint-plugin-import eslint-plugin-prettier eslint jest jest-junit prettier projen ts-jest ts-node typescript aws-cdk-lib constructs",
        },
        Object {
          "exec": "npx projen",
        },
        Object {
          "spawn": "post-upgrade",
        },
      ],
    },
    "watch": Object {
      "description": "Watches changes in your source code and rebuilds and deploys to the current account",
      "name": "watch",
      "steps": Array [
        Object {
          "exec": "cdk deploy --hotswap",
        },
        Object {
          "exec": "cdk watch",
        },
      ],
    },
    "watch:local:us-east": Object {
      "description": "Deploy app to us-east and watch for changes",
      "name": "watch:local:us-east",
      "steps": Array [
        Object {
          "exec": "cdk deploy *-us-east --profile Integration-0000000000 --require-approval never",
        },
        Object {
          "exec": "cdk watch *-us-east --profile Integration-0000000000",
        },
      ],
    },
  },
}
`;

exports[`validate generated project files turbo.json 1`] = `
Object {
  "$schema": "https://turborepo.org/schema.json",
  "//": "~~ Generated by projen. To modify, edit .projenrc.ts and run \\"npx projen\\".",
  "pipeline": Object {
    "eslint": Object {
      "cache": false,
      "dependsOn": Array [
        "^eslint",
      ],
    },
    "my-app#synth:silent": Object {
      "cache": true,
      "outputMode": "new-only",
      "outputs": Array [
        "cdk.out",
      ],
    },
    "my-app#test": Object {
      "cache": true,
      "dependsOn": Array [
        "my-app#synth:silent",
      ],
      "outputMode": "new-only",
    },
    "turbo:build": Object {
      "dependsOn": Array [
        "my-app#synth:silent",
        "my-app#test",
      ],
      "outputMode": "new-only",
    },
  },
}
`;
