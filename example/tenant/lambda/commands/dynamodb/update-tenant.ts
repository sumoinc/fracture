import { DynamoDBClient } from "@aws-sdk/client-dynamodb";
import { DynamoDBDocumentClient, UpdateCommand } from "@aws-sdk/lib-dynamodb";
import { marshall, unmarshall } from "@aws-sdk/util-dynamodb";
import {
  DynamoTenant,
  UpdateTenantInput,
  UpdateTenantOutput,
} from "../../../ts/tenant";

const client = new DynamoDBClient({});
const dynamo = DynamoDBDocumentClient.from(client);
const tableName = "tenant";

export const updateTenant = async (
  input: UpdateTenantInput
): Promise<UpdateTenantOutput> => {
  /**
   * Initialize the shape dynamo expects. This may differ from the externally
   * exposed shape.
   */
  let tenant: DynamoTenant = {
    t: "Tenant",
    v: "LATEST",
    ud: new Date().toISOString(),
    id: input.id,
  };

  /**
   * Add key values to the shape.
   */
  tenant.pk = tenant.id;
  tenant.sk = tenant.t + "#" + tenant.v;

  /**
   * Build the key for this item.
   */
  const tenantKey = {
    pk: tenant.pk,
    sk: tenant.sk,
  };

  /**
   * Try to put the data in dynamo.
   */
  const result = await dynamo.send(
    new PutCommand({
      TableName: tableName,
      Item: marshall(tenant),
    })
  );
};
// ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
